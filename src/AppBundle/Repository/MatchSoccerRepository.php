<?php

namespace AppBundle\Repository;

use AppBundle\Entity\MatchSoccer;

/**
 * MatchSoccerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MatchSoccerRepository extends \Doctrine\ORM\EntityRepository
{

	private function getEm()
	{
		return $this->getEntityManager();
	}

	/**
	 * Verifica si existe un partido con cierta informacion en DDBB
	 *
	 * @param MatchSoccer $macth
	 *
	 * @return bool
	 */
	public function matchExist(MatchSoccer $match)
	{
		//validar que el id que busco cuando edito sea distinto al que entra.
		try {
			return (bool) $this->createQueryBuilder("m")
				->select("COUNT(m.id)")
				->andWhere("m.home = :home")
				->andWhere("m.visitor = :visitor")
				->andWhere("DATE(m.datematch) = :date")
				->setParameter("home", $match->getHome() ? (int) $match->getHome()->getId() : 0)
				->setParameter("visitor", $match->getVisitor() ? (int) $match->getVisitor()->getId() : 0)
				->setParameter("date", $match->getDateMatch())
				->getQuery()
				->getSingleScalarResult();
		}
		catch (\Exception $e) {
			return true;
		}
	}

	public function fixture()
	{
		$positions = $this->getEm()->createQueryBuilder()
			->addSelect("t.name as team")
			->addSelect("
				SUM(
					CASE
		               	WHEN
							t.id = ms.home
		               		AND ms.goalsHome > ms.goalsVisitor
		               	THEN
		               		3

		               	WHEN
		               		t.id = ms.home
		               		AND ms.goalsHome = ms.goalsVisitor
		               	THEN
		               		1

		               	WHEN
		               		t.id = ms.visitor
		               		AND ms.goalsVisitor > ms.goalsHome
		               	THEN
		               		3

		               	WHEN
		               		t.id = ms.visitor
		               		AND ms.goalsVisitor = ms.goalsHome
		               	THEN
		               		1
	               	ELSE
	               		0
				 	END
				) AS point
			")
			->addSelect("COUNT(ms.id) AS pj")
	 		->addSelect("
	 			SUM(
					CASE
						WHEN
							t.id = ms.home
							AND ms.goalsHome > ms.goalsVisitor
						THEN
							1

						WHEN
							t.id = ms.visitor
							AND ms.goalsVisitor > ms.goalsHome
						THEN
							1
					ELSE
						0
					END
				) AS win
			")
	 		->addSelect("
	 			SUM(
					CASE
						WHEN t.id = ms.home AND ms.goalsHome = ms.goalsVisitor THEN 1
						WHEN t.id = ms.visitor AND ms.goalsVisitor = ms.goalsHome THEN 1
					ELSE
						0
					END
				) AS tie
			")
	 		->addSelect("
	 			SUM(
					CASE
						WHEN t.id = ms.home AND ms.goalsHome < ms.goalsVisitor THEN 1
						WHEN t.id = ms.visitor AND ms.goalsVisitor < ms.goalsHome THEN 1
					ELSE
					    0
					END
				) AS lost
			")
	 		->addSelect("
	 			SUM(
					CASE
						WHEN t.id = ms.home THEN ms.goalsHome
						WHEN t.id = ms.visitor THEN ms.goalsVisitor
					ELSE
						0
					END
				) AS gf
			")
	 		->addSelect("
	 			SUM(
					CASE
						WHEN t.id = ms.home THEN ms.goalsVisitor
						WHEN t.id = ms.visitor THEN ms.goalsHome
					ELSE
						0
					END
				) AS gc
			")
	 		->from("AppBundle:MatchSoccer", "ms")
	 		->join("AppBundle:Team", "t", "WITH", "ms.home = t.id OR ms.visitor = t.id")
	 		->andWhere("ms.goalsHome IS NOT NULL")
	 		->andWhere("ms.goalsVisitor IS NOT NULL")
	 		->groupBy("t.id")
	 		->orderBy("point", "DESC")
	 		->getQuery()
	 		->getResult();

	 	return $positions;
	}
}
